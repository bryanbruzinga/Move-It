{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"D:/NLW/moveit/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\NLW\\\\moveit\\\\src\\\\components\\\\Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styles from \"../styles/components/Countdown.module.css\";\nexport function Countdown() {\n  _s();\n\n  var _React$useState = React.useState(25 * 60),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      time = _React$useState2[0],\n      setTime = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      active = _React$useState4[0],\n      setActive = _React$useState4[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, \"0\").split(\"\"),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, \"0\").split(\"\"),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  function startCountdown() {\n    setActive(true);\n  }\n\n  React.useEffect(function () {\n    if (active && time > 0) {\n      setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    }\n  }, [active, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCountdown,\n      type: \"button\",\n      className: styles.countdownButton,\n      children: \"Iniciar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Countdown, \"3EKOgXtVEHwLiPshhAxw55JPutw=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["D:/NLW/moveit/src/components/Countdown.tsx"],"names":["React","styles","Countdown","useState","time","setTime","active","setActive","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","startCountdown","useEffect","setTimeout","countdownContainer","countdownButton"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAAA,wBACFF,KAAK,CAACG,QAAN,CAAe,KAAK,EAApB,CADE;AAAA;AAAA,MACnBC,IADmB;AAAA,MACbC,OADa;;AAAA,yBAEEL,KAAK,CAACG,QAAN,CAAe,KAAf,CAFF;AAAA;AAAA,MAEnBG,MAFmB;AAAA,MAEXC,SAFW;;AAI1B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMO,OAAO,GAAGP,IAAI,GAAG,EAAvB;;AAL0B,8BAOQQ,MAAM,CAACJ,OAAD,CAAN,CAAgBK,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAPR;AAAA;AAAA,MAOnBC,UAPmB;AAAA,MAOPC,WAPO;;AAAA,+BAQQJ,MAAM,CAACD,OAAD,CAAN,CAAgBE,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CARR;AAAA;AAAA,MAQnBG,UARmB;AAAA,MAQPC,WARO;;AAU1B,WAASC,cAAT,GAA0B;AACxBZ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAEDP,EAAAA,KAAK,CAACoB,SAAN,CAAgB,YAAM;AACpB,QAAId,MAAM,IAAIF,IAAI,GAAG,CAArB,EAAwB;AACtBiB,MAAAA,UAAU,CAAC,YAAM;AACfhB,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GAND,EAMG,CAACE,MAAD,EAASF,IAAT,CANH;AAQA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEH,MAAM,CAACqB,kBAAvB;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AACE,MAAA,OAAO,EAAEC,cADX;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAElB,MAAM,CAACsB,eAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA5CerB,S;;KAAAA,S","sourcesContent":["import React from \"react\";\r\nimport styles from \"../styles/components/Countdown.module.css\";\r\n\r\nexport function Countdown() {\r\n  const [time, setTime] = React.useState(25 * 60);\r\n  const [active, setActive] = React.useState(false);\r\n\r\n  const minutes = Math.floor(time / 60);\r\n  const seconds = time % 60;\r\n\r\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, \"0\").split(\"\");\r\n  const [secondLeft, secondRight] = String(seconds).padStart(2, \"0\").split(\"\");\r\n\r\n  function startCountdown() {\r\n    setActive(true);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (active && time > 0) {\r\n      setTimeout(() => {\r\n        setTime(time - 1);\r\n      }, 1000);\r\n    }\r\n  }, [active, time]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.countdownContainer}>\r\n        <div>\r\n          <span>{minuteLeft}</span>\r\n          <span>{minuteRight}</span>\r\n        </div>\r\n        <span>:</span>\r\n        <div>\r\n          <span>{secondLeft}</span>\r\n          <span>{secondRight}</span>\r\n        </div>\r\n      </div>\r\n      <button\r\n        onClick={startCountdown}\r\n        type=\"button\"\r\n        className={styles.countdownButton}\r\n      >\r\n        Iniciar um ciclo\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}